
package com.net.wsdl;

import clier.Constantes;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLStreamHandler;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "Timbrado_Cfdi", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://201.156.18.141:8080/b1timbrado_cliente_servidor/TimbradoCfdi.asmx?WSDL")
public class TimbradoCfdi_Service
    extends Service
{

    private final static URL TIMBRADOCFDI_WSDL_LOCATION;
    private final static WebServiceException TIMBRADOCFDI_EXCEPTION;
    private final static QName TIMBRADOCFDI_QNAME = new QName("http://tempuri.org/", "Timbrado_Cfdi");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
//            System.out.println("\t\t" + Constantes.WSDL);
            //url = new URL(Constantes.WSDL);
            url = new URL(null, Constantes.WSDL, new URLStreamHandler() {
                protected URLConnection openConnection(URL url) throws IOException {
                    // The url is the parent of this stream handler, so must create clone  
                    URL clone = new URL(url.toString());
                    URLConnection connection = clone.openConnection();
                    // If you cast to HttpURLConnection, you can set redirects  
                    // connection.setInstanceFollowRedirects (false); // no redirs  
                    connection.setConnectTimeout(Constantes.TIMEOUT * 1000);
                    connection.setReadTimeout(Constantes.TIMEOUT * 1000);
                    // Custom header  
                    connection.addRequestProperty("Developer-Mood", "ClierB1Timbre");
                    return connection;
                }
            });
            //System.out.println("Enviando a: " + properties.getProperty("url_wsdl"));
            //System.out.println("Url seteada");
            //url = new URL("http://201.156.18.141:8080/b1timbrado_cliente_servidor/TimbradoCfdi.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        } catch (Exception ex) {
            ex.printStackTrace();;
        }
        TIMBRADOCFDI_WSDL_LOCATION = url;
        TIMBRADOCFDI_EXCEPTION = e;
    }

    public TimbradoCfdi_Service() {
        super(__getWsdlLocation(), TIMBRADOCFDI_QNAME);
    }

    public TimbradoCfdi_Service(WebServiceFeature... features) {
        super(__getWsdlLocation(), TIMBRADOCFDI_QNAME, features);
    }

    public TimbradoCfdi_Service(URL wsdlLocation) {
        super(wsdlLocation, TIMBRADOCFDI_QNAME);
    }

    public TimbradoCfdi_Service(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TIMBRADOCFDI_QNAME, features);
    }

    public TimbradoCfdi_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TimbradoCfdi_Service(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns TimbradoCfdiSoap
     */
    @WebEndpoint(name = "Timbrado_CfdiSoap")
    public TimbradoCfdiSoap getTimbradoCfdiSoap() {
        return super.getPort(new QName("http://tempuri.org/", "Timbrado_CfdiSoap"), TimbradoCfdiSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TimbradoCfdiSoap
     */
    @WebEndpoint(name = "Timbrado_CfdiSoap")
    public TimbradoCfdiSoap getTimbradoCfdiSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "Timbrado_CfdiSoap"), TimbradoCfdiSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns TimbradoCfdiSoap
     */
    @WebEndpoint(name = "Timbrado_CfdiSoap12")
    public TimbradoCfdiSoap getTimbradoCfdiSoap12() {
        return super.getPort(new QName("http://tempuri.org/", "Timbrado_CfdiSoap12"), TimbradoCfdiSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TimbradoCfdiSoap
     */
    @WebEndpoint(name = "Timbrado_CfdiSoap12")
    public TimbradoCfdiSoap getTimbradoCfdiSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "Timbrado_CfdiSoap12"), TimbradoCfdiSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TIMBRADOCFDI_EXCEPTION!= null) {
            throw TIMBRADOCFDI_EXCEPTION;
        }
        return TIMBRADOCFDI_WSDL_LOCATION;
    }

}
